//// Glue.Lib.Mail.SmtpMail.cs////using System;using System.Net;using System.Net.Sockets;using System.Text;using System.IO;using System.Reflection;namespace Glue.Lib.Mail{	/// <remarks>	/// </remarks>	public class SmtpMail	{		private static string smtpServer = "localhost";				// Constructor				private SmtpMail()		{			/* empty */		}				// Properties        public static string SmtpServer         {            get { return smtpServer; }             set { smtpServer = value; }        }		public static void Send(MailMessage message) 		{            try             {                // wrap the MailMessage in a MailMessage wrapper for easier                // access to properties and to add some functionality                //MailMessageWrapper messageWrapper = new MailMessageWrapper( message );                SmtpClient smtp = new SmtpClient(smtpServer);                smtp.Send(message);                smtp.Close();            }             catch (SmtpException ex)             {                throw new System.Web.HttpException(ex.Message, ex);            }             catch (IOException ex)             {                throw new System.Web.HttpException(ex.Message, ex);            }             catch (FormatException ex)             {                throw new System.Web.HttpException(ex.Message, ex);            }             catch (SocketException ex)             {                throw new System.Web.HttpException(ex.Message, ex);            }		}		public static void Send(string from, string to, string subject, string messageText) 		{			MailMessage message = new MailMessage();			message.From = MailAddress.Parse(from);			message.To = MailAddressCollection.Parse(to);			message.Subject = subject;			message.HtmlBody = messageText;			Send(message);		}        public static void Send(string from, string to, string subject, string text, string html)         {            MailMessage message = new MailMessage();            message.From = MailAddress.Parse(from);            message.To = MailAddressCollection.Parse(to);            message.Subject = subject;            message.TextBody = text;            message.HtmlBody = html;            Send(message);        }    }}